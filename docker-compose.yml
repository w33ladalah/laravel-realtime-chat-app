name: ai-chat-laravel
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - /var/www/node_modules
    ports:
      - "8000:8000"  # Laravel app
      - "5173:5173"  # Vite
      - "8080:8080"  # Reverb
    environment:
      - VITE_APP_NAME=${APP_NAME}
      - VITE_REVERB_APP_KEY=${REVERB_APP_KEY}
      - VITE_REVERB_HOST=${REVERB_HOST}
      - VITE_REVERB_PORT=${REVERB_PORT}
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - laravel-network
    depends_on:
      - mysql
      - redis
    command: >
      bash -c "cd /var/www &&
               composer install &&
               php artisan migrate --force &&
               echo 'Starting Reverb server...' &&
               nohup php artisan reverb:start --host=0.0.0.0 --port=8080 > /var/www/storage/logs/reverb.log 2>&1 &
               echo 'Starting Vite...' &&
               npm install &&
               nohup npm run dev > /var/www/storage/logs/vite.log 2>&1 &
               echo 'Starting Laravel server...' &&
               php artisan serve --host=0.0.0.0 --port=8000"

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - laravel-network
    depends_on:
      - app

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_USER: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel-network

  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  adminer:
    build:
      context: .
      dockerfile: Dockerfile.adminer
    environment:
      - ADMINER_PLUGINS=
      - ADMINER_DESIGN=pepa-linha
      - ADMINER_DEFAULT_SERVER=mysql
    ports:
      - "${ADMINER_PORT}:8080"
    depends_on:
      - mysql

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql-data:
  vite_node_modules:
